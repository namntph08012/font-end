{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB207\\\\react-ASS-PT14313\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport apiRequestCate from './api/categoriesApi';\nimport apiRequestBlog from './api/blogApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [blogs, setBlogs] = useState([]); // Phần sản phẩm\n  // Danh sách sản phẩm\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await apiRequestCate.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n\n    const getBlogs = async () => {\n      try {\n        const {\n          data\n        } = await apiRequestCate.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n      alert(\"Xóa thành công\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật product \n\n\n  const onHandleUpdate = async updateProduct => {\n    try {\n      const {\n        data\n      } = await apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n      );\n      setProducts(newProducts);\n      alert(\"Đã sửa thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Phần danh mục\n\n\n  const onHandleRemoveCate = async id => {\n    try {\n      const {\n        data\n      } = await apiRequestCate.remove(id);\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n      alert(\"Xóa thành công\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  };\n\n  const onHandleAddCate = async category => {\n    try {\n      const {\n        data\n      } = await apiRequestCate.create(category);\n      setCategories([...categories, data]);\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateCate = async updateCategory => {\n    console.log(updateCategory);\n\n    try {\n      const {\n        data\n      } = await apiRequestCate.update(updateCategory.id, updateCategory);\n      const newCategories = categories.map(category => category.id === updateCategory.id ? updateCategory : category);\n      setCategories(newCategories);\n      alert(\"Đã sửa thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; //   const newProducts = products.map(product => (\n  //     product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   ));\n  //   localStorage.setItem('products', JSON.stringify(newProducts))\n  //   setProducts(newProducts);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    onRemoveCate: onHandleRemoveCate,\n    onAddCate: onHandleAddCate,\n    onUpdateCate: onHandleUpdateCate,\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/WEB207/react-ASS-PT14313/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","apiRequestCate","apiRequestBlog","App","categories","setCategories","products","setProducts","blogs","setBlogs","getProducts","data","getAll","error","console","log","getCategories","getBlogs","onHandleRemove","id","remove","newProducts","filter","product","alert","onHandleAdd","create","onHandleUpdate","updateProduct","update","map","onHandleRemoveCate","newCategories","category","onHandleAddCate","onHandleUpdateCate","updateCategory"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA0B,qBAA1B;AACA,OAAOC,cAAP,MAA0B,eAA1B;;AAIA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAHa,CAIb;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMX,UAAU,CAACY,MAAX,EAAvB;AACAL,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAH,IAAAA,WAAW;;AACX,UAAMM,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAM;AAAEL,UAAAA;AAAF,YAAW,MAAMV,cAAc,CAACW,MAAf,EAAvB;AACAP,QAAAA,aAAa,CAACM,IAAD,CAAb;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAG,IAAAA,aAAa;;AACb,UAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAM;AAAEN,UAAAA;AAAF,YAAW,MAAMV,cAAc,CAACW,MAAf,EAAvB;AACAP,QAAAA,aAAa,CAACM,IAAD,CAAb;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAG,IAAAA,aAAa;AACd,GA5BQ,EA4BN,EA5BM,CAAT,CANa,CAmCb;;AACA,QAAME,cAAc,GAAG,MAAOC,EAAP,IAAc;AACnC,QAAI;AACF,YAAM;AAAER,QAAAA;AAAF,UAAW,MAAMX,UAAU,CAACoB,MAAX,CAAkBD,EAAlB,CAAvB;AACA,YAAME,WAAW,GAAGf,QAAQ,CAACgB,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACJ,EAAR,KAAeA,EAA1C,CAApB;AACAZ,MAAAA,WAAW,CAACc,WAAD,CAAX;AACAG,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,KALD,CAKE,OAAOX,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GATD,CApCa,CA8Cb;;;AACA,QAAMY,WAAW,GAAG,MAAOF,OAAP,IAAmB;AACrC,QAAI;AACF,YAAM;AAAEZ,QAAAA;AAAF,UAAW,MAAMX,UAAU,CAAC0B,MAAX,CAAkBH,OAAlB,CAAvB;AACAhB,MAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVK,IAFU,CAAD,CAAX;AAIAa,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,KAPD,CAOE,OAAOX,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAXD,CA/Ca,CA4Db;;;AACA,QAAMc,cAAc,GAAG,MAAOC,aAAP,IAAyB;AAC9C,QAAG;AACD,YAAK;AAACjB,QAAAA;AAAD,UAAS,MAAMX,UAAU,CAAC6B,MAAX,CAAkBD,aAAa,CAACT,EAAhC,EAAoCS,aAApC,CAApB;AACA,YAAMP,WAAW,GAAGf,QAAQ,CAACwB,GAAT,CAAaP,OAAO,IACtCA,OAAO,CAACJ,EAAR,KAAeS,aAAa,CAACT,EAA7B,GAAkCS,aAAlC,GAAkDL,OADZ,CACqB;AADzC,OAApB;AAGAhB,MAAAA,WAAW,CAACc,WAAD,CAAX;AACAG,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAPD,CAQA,OAAOX,KAAP,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAZD,CA7Da,CA0Eb;;;AACA,QAAMkB,kBAAkB,GAAG,MAAOZ,EAAP,IAAc;AACvC,QAAI;AACF,YAAM;AAAER,QAAAA;AAAF,UAAW,MAAMV,cAAc,CAACmB,MAAf,CAAsBD,EAAtB,CAAvB;AACA,YAAMa,aAAa,GAAG5B,UAAU,CAACkB,MAAX,CAAkBW,QAAQ,IAAIA,QAAQ,CAACd,EAAT,KAAgBA,EAA9C,CAAtB;AACAd,MAAAA,aAAa,CAAC2B,aAAD,CAAb;AACAR,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,KALD,CAKE,OAAOX,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GATD;;AAUA,QAAMqB,eAAe,GAAG,MAAOD,QAAP,IAAoB;AAC1C,QAAI;AACF,YAAM;AAAEtB,QAAAA;AAAF,UAAW,MAAMV,cAAc,CAACyB,MAAf,CAAsBO,QAAtB,CAAvB;AACA5B,MAAAA,aAAa,CAAC,CACZ,GAAGD,UADS,EAEZO,IAFY,CAAD,CAAb;AAIAa,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,KAPD,CAOE,OAAOX,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAXD;;AAYA,QAAMsB,kBAAkB,GAAG,MAAOC,cAAP,IAA0B;AACnDtB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,cAAZ;;AACA,QAAG;AACD,YAAK;AAACzB,QAAAA;AAAD,UAAS,MAAMV,cAAc,CAAC4B,MAAf,CAAsBO,cAAc,CAACjB,EAArC,EAAyCiB,cAAzC,CAApB;AACA,YAAMJ,aAAa,GAAG5B,UAAU,CAAC0B,GAAX,CAAeG,QAAQ,IAC3CA,QAAQ,CAACd,EAAT,KAAgBiB,cAAc,CAACjB,EAA/B,GAAoCiB,cAApC,GAAqDH,QADjC,CAAtB;AAGA5B,MAAAA,aAAa,CAAC2B,aAAD,CAAb;AACAR,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAPD,CAQA,OAAOX,KAAP,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAbD,CAjGa,CAgHb;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACC,IAAA,UAAU,EAAGT,UADd;AAEC,IAAA,YAAY,EAAI2B,kBAFjB;AAGC,IAAA,SAAS,EAAIG,eAHd;AAIC,IAAA,YAAY,EAAEC,kBAJf;AAKC,IAAA,QAAQ,EAAE7B,QALX;AAMC,IAAA,QAAQ,EAAEY,cANX;AAOC,IAAA,KAAK,EAAGO,WAPT;AAQC,IAAA,QAAQ,EAAGE,cARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD;;AACD,eAAexB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi'\nimport apiRequestCate from'./api/categoriesApi';\nimport apiRequestBlog from'./api/blogApi';\n\n\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [blogs, setBlogs] = useState([]); \n  // Phần sản phẩm\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n    const getCategories = async () => {\n      try {\n        const { data } = await apiRequestCate.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n    const getBlogs = async () => {\n      try {\n        const { data } = await apiRequestCate.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n      alert(\"Xóa thành công\")\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  \n  // Cập nhật product \n  const onHandleUpdate = async (updateProduct) => {\n    try{\n      const{data} = await apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => (\n        product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n      ));\n      setProducts(newProducts);\n      alert(\"Đã sửa thành công !\");\n    }\n    catch (error){\n      console.log('failed to request API: ', error)\n    }\n  }\n  // Phần danh mục\n  const onHandleRemoveCate = async (id) => {\n    try {\n      const { data } = await apiRequestCate.remove(id);\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n      alert(\"Xóa thành công\")\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  const onHandleAddCate = async (category) => {\n    try {\n      const { data } = await apiRequestCate.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  const onHandleUpdateCate = async (updateCategory) => {\n    console.log(updateCategory)\n    try{\n      const{data} = await apiRequestCate.update(updateCategory.id, updateCategory);\n      const newCategories = categories.map(category => (\n        category.id === updateCategory.id ? updateCategory : category \n      ));\n      setCategories(newCategories);\n      alert(\"Đã sửa thành công !\");\n    }\n    catch (error){\n      console.log('failed to request API: ', error)\n    }\n  }\n\n  //   const newProducts = products.map(product => (\n  //     product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   ));\n  //   localStorage.setItem('products', JSON.stringify(newProducts))\n  //   setProducts(newProducts);\n  return (\n    <div className=\"App\">\n      <Routers\n       categories ={categories} \n       onRemoveCate = {onHandleRemoveCate}\n       onAddCate = {onHandleAddCate}\n       onUpdateCate={onHandleUpdateCate}\n       products={products} \n       onRemove={onHandleRemove}  \n       onAdd ={onHandleAdd} \n       onUpdate ={onHandleUpdate} />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}