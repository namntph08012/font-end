{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB207\\\\react-ASS-PT14313\\\\src\\\\pages\\\\views\\\\Admin\\\\EditBlogs\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"../../../../firebase/index\";\n\nconst EditBlog = ({\n  blogs,\n  onUpdateBlog\n}) => {\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const blog = blogs.find(blog => blog.id === id);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // Sử dụng hook form\n\n  const [currentBLog, setCurrentCategory] = useState(category);\n\n  const onHandleSubmit = data => {\n    let file = data.image[0];\n\n    if (file) {\n      // create reference in firebase\n      let storageRef = firebase.storage().ref(`images/${file.name}`); // upload image\n\n      storageRef.put(file).then(function () {\n        storageRef.getDownloadURL().then(url => {\n          console.log(url); // get input value\n\n          const newData = {\n            id: id,\n            ...data,\n            image: url\n          };\n          onUpdateBlog(newData);\n          history.push('/admin/categories');\n        });\n      });\n    } else {\n      const newData = {\n        id: id,\n        ...data\n      };\n      onUpdateBlog(newData);\n      history.push('/admin/categories');\n    }\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentCategory({ ...setCurrentCategory,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  });\n};\n\nEditBlog.propTypes = {};\nexport default EditBlog;","map":{"version":3,"sources":["D:/WEB207/react-ASS-PT14313/src/pages/views/Admin/EditBlogs/index.js"],"names":["React","useState","PropTypes","useParams","useForm","useHistory","firebase","EditBlog","blogs","onUpdateBlog","id","history","blog","find","register","handleSubmit","errors","currentBLog","setCurrentCategory","category","onHandleSubmit","data","file","image","storageRef","storage","ref","name","put","then","getDownloadURL","url","console","log","newData","push","onHandleChange","e","value","target","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,KAA0B;AACvC,MAAI;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAtB;AACA,MAAIQ,OAAO,GAAGN,UAAU,EAAxB;AACA,QAAMO,IAAI,GAAGJ,KAAK,CAACK,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAA/B,CAAb;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCZ,OAAO,EAAlD,CAJuC,CAIe;;AACtD,QAAM,CAACa,WAAD,EAAcC,kBAAd,IAAoCjB,QAAQ,CAACkB,QAAD,CAAlD;;AACA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,QAAIC,IAAI,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,CAAX;;AACA,QAAGD,IAAH,EAAQ;AACN;AACA,UAAIE,UAAU,GAAGlB,QAAQ,CAACmB,OAAT,GAAmBC,GAAnB,CAAwB,UAASJ,IAAI,CAACK,IAAK,EAA3C,CAAjB,CAFM,CAGN;;AACAH,MAAAA,UAAU,CAACI,GAAX,CAAeN,IAAf,EAAqBO,IAArB,CAA0B,YAAU;AAClCL,QAAAA,UAAU,CAACM,cAAX,GAA4BD,IAA5B,CAAkCE,GAAD,IAAO;AACtCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADsC,CAElC;;AACA,gBAAMG,OAAO,GAAG;AACdxB,YAAAA,EAAE,EAAEA,EADU;AAEd,eAAGW,IAFW;AAGdE,YAAAA,KAAK,EAAEQ;AAHO,WAAhB;AAKAtB,UAAAA,YAAY,CAACyB,OAAD,CAAZ;AACAvB,UAAAA,OAAO,CAACwB,IAAR,CAAa,mBAAb;AACL,SAVD;AAWD,OAZD;AAaD,KAjBD,MAkBI;AACQ,YAAMD,OAAO,GAAG;AAChBxB,QAAAA,EAAE,EAAEA,EADY;AAEhB,WAAGW;AAFa,OAAhB;AAIFZ,MAAAA,YAAY,CAACyB,OAAD,CAAZ;AACAvB,MAAAA,OAAO,CAACwB,IAAR,CAAa,mBAAb;AACT;AACF,GA5BD;;AA6BA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEV,MAAAA,IAAF;AAAQW,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACArB,IAAAA,kBAAkB,CAAC,EACf,GAAGA,kBADY;AAEf,OAACS,IAAD,GAAQW;AAFO,KAAD,CAAlB;AAIH,GAND;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CA/CD;;AAiDA/B,QAAQ,CAACiC,SAAT,GAAqB,EAArB;AAIA,eAAejC,QAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {useParams} from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport firebase from \"../../../../firebase/index\"\r\n\r\nconst EditBlog = ({blogs,onUpdateBlog}) => {\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const blog = blogs.find(blog => blog.id === id);\r\n    const { register, handleSubmit, errors } = useForm(); // Sử dụng hook form\r\n    const [currentBLog, setCurrentCategory] = useState(category);\r\n    const onHandleSubmit = (data) => {\r\n      let file = data.image[0];\r\n      if(file){\r\n        // create reference in firebase\r\n        let storageRef = firebase.storage().ref(`images/${file.name}`);\r\n        // upload image\r\n        storageRef.put(file).then(function(){\r\n          storageRef.getDownloadURL().then((url)=>{\r\n            console.log(url);\r\n                // get input value\r\n                const newData = {\r\n                  id: id,\r\n                  ...data,\r\n                  image: url\r\n                }\r\n                onUpdateBlog(newData);\r\n                history.push('/admin/categories');\r\n          })\r\n        })\r\n      }\r\n      else{\r\n                  const newData = {\r\n                  id: id,\r\n                  ...data,\r\n                }\r\n                onUpdateBlog(newData);\r\n                history.push('/admin/categories');\r\n      }   \r\n    }\r\n    const onHandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentCategory({\r\n            ...setCurrentCategory,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nEditBlog.propTypes = {\r\n\r\n}\r\n\r\nexport default EditBlog\r\n"]},"metadata":{},"sourceType":"module"}