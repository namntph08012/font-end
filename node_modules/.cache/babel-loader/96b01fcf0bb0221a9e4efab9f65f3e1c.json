{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB207\\\\react-ASS-PT14313\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]); // Danh sách sản phẩm\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts); // alert(\"Xóa thành công\")\n\n      Swal.fire({\n        title: 'Chắc chắn xóa hotels?',\n        text: \"Sau khi xóa sẽ không lấy lại dữ liệu được!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Đồng ý!',\n        cancelButtonText: 'Không đồng ý!'\n      }).then(result => {\n        if (result.value) {\n          // gửi request lên server\n          var deleteUrl = apiUrl + \"/\" + removeId;\n          axios.delete(deleteUrl).then(response => {\n            console.log(response);\n          }).then(() => {\n            var removeElement = document.querySelector('#row-' + removeId);\n            removeElement.remove();\n            Swal.fire({\n              position: 'bottom-end',\n              icon: 'success',\n              title: 'Đã xóa',\n              showConfirmButton: false,\n              timer: 1500\n            });\n          });\n        }\n      });\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật product \n\n\n  const onHandleUpdate = async updateProduct => {\n    try {\n      const {\n        data\n      } = await apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n      );\n      setProducts(newProducts);\n      alert(\"Đã sửa thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    } //   const newProducts = products.map(product => (\n    //     product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    //   ));\n    //   localStorage.setItem('products', JSON.stringify(newProducts))\n    //   setProducts(newProducts);\n    // }\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/WEB207/react-ASS-PT14313/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","App","products","setProducts","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","deleteUrl","apiUrl","removeId","axios","delete","response","removeElement","document","querySelector","position","showConfirmButton","timer","onHandleAdd","create","alert","onHandleUpdate","updateProduct","update","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\n\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n      // alert(\"Xóa thành công\")\n      Swal.fire({\n        title: 'Chắc chắn xóa hotels?',\n        text: \"Sau khi xóa sẽ không lấy lại dữ liệu được!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Đồng ý!',\n        cancelButtonText: 'Không đồng ý!'\n        }).then((result) => {\n            if (result.value) {\n                // gửi request lên server\n                var deleteUrl = apiUrl + \"/\" + removeId;\n                axios.delete(deleteUrl)\n                .then(response => {\n                    console.log(response);\n                })\n                .then(() => {\n                    var removeElement = document.querySelector('#row-' + removeId);\n                    removeElement.remove();\n                    Swal.fire({\n                        position: 'bottom-end',\n                        icon: 'success',\n                        title: 'Đã xóa',\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                })\n              }\n            })\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  \n  // Cập nhật product \n  const onHandleUpdate = async (updateProduct) => {\n    try{\n      const{data} = await apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => (\n        product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n      ));\n      setProducts(newProducts);\n      alert(\"Đã sửa thành công !\");\n    }\n    catch (error){\n      console.log('failed to request API: ', error)\n    }\n  //   const newProducts = products.map(product => (\n  //     product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   ));\n  //   localStorage.setItem('products', JSON.stringify(newProducts))\n  //   setProducts(newProducts);\n  // }\n    }\n  return (\n    <div className=\"App\">\n      <Routers products={products} onRemove={onHandleRemove}  onAdd ={onHandleAdd} onUpdate ={onHandleUpdate} />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}