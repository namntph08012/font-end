{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB207\\\\react-ASS-PT14313\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport apiRequestCate from './api/categoriesApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]); // Phần sản phẩm\n  // Danh sách sản phẩm\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n      setCategories(newCategories);\n      alert(\"Xóa thành công\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật product \n\n\n  const onHandleUpdate = async updateProduct => {\n    try {\n      const {\n        data\n      } = await apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n      );\n      setProducts(newProducts);\n      alert(\"Đã sửa thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    } // Phần danh mục\n\n\n    useEffect(() => {\n      const getCategories = async () => {\n        try {\n          const {\n            data\n          } = await apiRequestCate.getAll();\n          setCategories(data);\n        } catch (error) {\n          console.log('failed to request API: ', error);\n        }\n      };\n\n      getC();\n    }, []); //   const newProducts = products.map(product => (\n    //     product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    //   ));\n    //   localStorage.setItem('products', JSON.stringify(newProducts))\n    //   setProducts(newProducts);\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/WEB207/react-ASS-PT14313/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","apiRequestCate","App","categories","setCategories","products","setProducts","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","newCategories","alert","onHandleAdd","create","onHandleUpdate","updateProduct","update","map","getCategories","getC"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi'\nimport apiRequestCate from'./api/categoriesApi';\n\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  // Phần sản phẩm\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n      setCategories(newCategories);\n      alert(\"Xóa thành công\")\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n      alert(\"Đã thêm thành công !\");\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  \n  // Cập nhật product \n  const onHandleUpdate = async (updateProduct) => {\n    try{\n      const{data} = await apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => (\n        product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n      ));\n      setProducts(newProducts);\n      alert(\"Đã sửa thành công !\");\n    }\n    catch (error){\n      console.log('failed to request API: ', error)\n    }\n  // Phần danh mục\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await apiRequestCate.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getC();\n  }, []);\n\n\n\n\n  //   const newProducts = products.map(product => (\n  //     product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   ));\n  //   localStorage.setItem('products', JSON.stringify(newProducts))\n  //   setProducts(newProducts);\n  // }\n    }\n  return (\n    <div className=\"App\">\n      <Routers\n       categories ={categories} products={products} onRemove={onHandleRemove}  onAdd ={onHandleAdd} onUpdate ={onHandleUpdate} />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}